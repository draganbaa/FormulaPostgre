// <auto-generated />
using System;
using FormulaPostgreSql.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FormulaPostgreSql.DataAccess.Migrations
{
    [DbContext(typeof(FormulaPostgreSqlContext))]
    partial class FormulaPostgreSqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FormulaPostgreSql.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Countryabbreviation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Countryname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("FormulaPostgreSql.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryFk")
                        .HasColumnType("integer");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DriverNumber")
                        .HasColumnType("integer");

                    b.Property<int>("TeamFk")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CountryFk");

                    b.HasIndex("TeamFk");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("FormulaPostgreSql.Models.ImageInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryFk")
                        .HasColumnType("integer");

                    b.Property<int>("DriverFk")
                        .HasColumnType("integer");

                    b.Property<string>("ImageDescription")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TeamFk")
                        .HasColumnType("integer");

                    b.Property<int>("TrackFk")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CountryFk");

                    b.HasIndex("DriverFk");

                    b.HasIndex("TeamFk");

                    b.HasIndex("TrackFk");

                    b.ToTable("ImageInfos");
                });

            modelBuilder.Entity("FormulaPostgreSql.Models.LocationInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryFk")
                        .HasColumnType("integer");

                    b.Property<string>("Locationname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryFk");

                    b.ToTable("LocationInfos");
                });

            modelBuilder.Entity("FormulaPostgreSql.Models.Penalty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DriverFk")
                        .HasColumnType("integer");

                    b.Property<string>("Penaltydetails")
                        .HasColumnType("text");

                    b.Property<int>("RaceFk")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DriverFk");

                    b.HasIndex("RaceFk");

                    b.ToTable("Penalties");
                });

            modelBuilder.Entity("FormulaPostgreSql.Models.QualifyingResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DriverFk")
                        .HasColumnType("integer");

                    b.Property<TimeSpan?>("Fastestlapq1")
                        .HasColumnType("interval");

                    b.Property<TimeSpan?>("Fastestlapq2")
                        .HasColumnType("interval");

                    b.Property<TimeSpan?>("Fastestlapq3")
                        .HasColumnType("interval");

                    b.Property<int?>("Position")
                        .HasColumnType("integer");

                    b.Property<int>("RaceFk")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DriverFk");

                    b.HasIndex("RaceFk");

                    b.ToTable("QualifyingResults");
                });

            modelBuilder.Entity("FormulaPostgreSql.Models.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsSprintQualifying")
                        .HasColumnType("boolean");

                    b.Property<int>("RaceLaps")
                        .HasColumnType("integer");

                    b.Property<decimal>("RaceLength")
                        .HasColumnType("numeric");

                    b.Property<string>("RaceName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RaceRound")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RaceStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TrackFk")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TrackFk");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("FormulaPostgreSql.Models.RaceResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DriverFk")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("FastestLap")
                        .HasColumnType("interval");

                    b.Property<int?>("FinalPosition")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("LapsFinished")
                        .HasColumnType("integer");

                    b.Property<int?>("PointsGained")
                        .HasColumnType("integer");

                    b.Property<int>("RaceFk")
                        .HasColumnType("integer");

                    b.Property<string>("RaceTime")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DriverFk");

                    b.HasIndex("RaceFk");

                    b.ToTable("RaceResults");
                });

            modelBuilder.Entity("FormulaPostgreSql.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Chassis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CountryFk")
                        .HasColumnType("integer");

                    b.Property<int>("LocationFk")
                        .HasColumnType("integer");

                    b.Property<string>("PowerUnit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TeamChief")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryFk");

                    b.HasIndex("LocationFk");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("FormulaPostgreSql.Models.TrackInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LocationFk")
                        .HasColumnType("integer");

                    b.Property<decimal>("Tracklength")
                        .HasColumnType("numeric");

                    b.Property<string>("Trackname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Turns")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LocationFk");

                    b.ToTable("TrackInfos");
                });

            modelBuilder.Entity("FormulaPostgreSql.Models.Driver", b =>
                {
                    b.HasOne("FormulaPostgreSql.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormulaPostgreSql.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("FormulaPostgreSql.Models.ImageInfo", b =>
                {
                    b.HasOne("FormulaPostgreSql.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormulaPostgreSql.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormulaPostgreSql.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormulaPostgreSql.Models.TrackInfo", "TrackInfo")
                        .WithMany()
                        .HasForeignKey("TrackFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Driver");

                    b.Navigation("Team");

                    b.Navigation("TrackInfo");
                });

            modelBuilder.Entity("FormulaPostgreSql.Models.LocationInfo", b =>
                {
                    b.HasOne("FormulaPostgreSql.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("FormulaPostgreSql.Models.Penalty", b =>
                {
                    b.HasOne("FormulaPostgreSql.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormulaPostgreSql.Models.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("FormulaPostgreSql.Models.QualifyingResult", b =>
                {
                    b.HasOne("FormulaPostgreSql.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormulaPostgreSql.Models.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("FormulaPostgreSql.Models.Race", b =>
                {
                    b.HasOne("FormulaPostgreSql.Models.TrackInfo", "TrackInfo")
                        .WithMany()
                        .HasForeignKey("TrackFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrackInfo");
                });

            modelBuilder.Entity("FormulaPostgreSql.Models.RaceResult", b =>
                {
                    b.HasOne("FormulaPostgreSql.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormulaPostgreSql.Models.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("FormulaPostgreSql.Models.Team", b =>
                {
                    b.HasOne("FormulaPostgreSql.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormulaPostgreSql.Models.LocationInfo", "LocationInfo")
                        .WithMany()
                        .HasForeignKey("LocationFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("LocationInfo");
                });

            modelBuilder.Entity("FormulaPostgreSql.Models.TrackInfo", b =>
                {
                    b.HasOne("FormulaPostgreSql.Models.LocationInfo", "LocationInfo")
                        .WithMany()
                        .HasForeignKey("LocationFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocationInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
